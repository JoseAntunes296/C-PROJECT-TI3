@model IEnumerable<Project.Models.project>

@{
    ViewBag.Title = "Edição de Projetos e Tarefas";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    if (Session["IdUser"] != null && Session["administrator"] != null)
    {
        if ((int)Session["administrator"] != 1)
        {
            Response.Redirect("/Home/Index");
        }
    }
    else
    {
        Response.Redirect("/Home/Index");
    }
}
<div class="text-center mt-3">
    @if (Model == null)
    {
        <p>
            Não existem projetos criados.
        </p>
    }
    else
    {
        <div class="table-responsive">
            <table id="projectTable" class="table" style="background-color: #222831;color:white;">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Nome do Projeto</th>
                        <th>Data de Início</th>
                        <th>Data de Término</th>
                        <th>Ações</th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var project in Model)
                    {
                        <tr>
                            <td>@project.IdProject</td>
                            <td>
                                @project.name
                                <button class="btn btn-link btn-sm ml-2" data-toggle="collapse" data-target="#project-@project.IdProject-Tasks"
                                        onclick="toggleAccordionIcon(this, @project.IdProject)">
                                    <ion-icon id="project-@project.IdProject-Icon" name="chevron-down-outline"></ion-icon>
                                </button>
                            </td>
                            <td>@project.startDate.ToShortDateString()</td>
                            <td>@project.endDate.ToShortDateString()</td>
                            <td>
                                <button class="btn hoverView" style="background-color: #1f2029; color: white; " data-toggle="modal" data-target="#editProjectModal"
                                        onclick="editProject(this)" data-project-id="@project.IdProject">
                                    <ion-icon name="create-outline"></ion-icon>
                                </button>
                                <button class="btn btn-delete hoverView" style="background-color: #1f2029; color: white;" data-toggle="modal" data-target="#confirmDeletingProject" data-project-id="@project.IdProject">
                                    <ion-icon name="trash-outline"></ion-icon>
                                </button>
                            </td>
                        </tr>
                        <tr id="project-@project.IdProject-Tasks" class="collapse">
                            <td colspan="5">
                                <table class="table" style="background-color: #1f2029; color: white;">
                                    <thead>
                                        <tr>
                                            <th>Nome da Tarefa</th>
                                            <th>Detalhes</th>
                                            <th>Data de Término</th>
                                            <th>Estado</th>
                                            <th>Ações</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var task in project.tasks)
                                        {
                                            int status;
                                            bool isNumeric = int.TryParse(task.status, out status);
                                            var teste = isNumeric && status > 0 ? "Ativo" : "Inativo";
                                            <tr>
                                                <td>@task.name</td>
                                                <td>@task.description</td>
                                                <td>@task.deadline.ToShortDateString()</td>
                                                <td>@teste</td>
                                                <td>
                                                    <button class="btn hoverView" style="background-color: #222831; color: white;" data-toggle="modal" data-target="#editTaskModal"
                                                            onclick="editTask(this)" data-task-id="@task.IdTask">
                                                        <ion-icon name="create-outline"></ion-icon>
                                                    </button>
                                                    <button class="btn hoverView btn-task-delete" style="background-color: #222831; color: white;" data-toggle="modal" data-task-id="@task.IdTask" data-target="#confirmDeleteTask">
                                                        <ion-icon name="trash-outline"></ion-icon>
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    <div>
        <a href="/AdminPanel/Index" class="btn hoverView" style="background-color: #222831;color:white; ">Go Back</a>
    </div>
</div>
<!-- Modal de Edição de Projeto -->
<div class="modal fade" id="editProjectModal" tabindex="-1" role="dialog" aria-labelledby="editProjectModalLabel" aria-hidden="true" style="background-color: #1f2029;">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content" style="background-color: #1f2029; color:white;">
            <div class="modal-header">
                <h5 class="modal-title" id="editProjectModalLabel">Editar Projeto</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" style="color:white">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="editProjectName">Nome do Projeto</label>
                        <input type="text" class="form-control" id="editProjectName" placeholder="Nome do Projeto" min="10" maxlength="50">
                    </div>
                    <div class="form-group">
                        <label for="editProjectDescription">Descrição</label>
                        <textarea class="form-control" id="editProjectDescription" placeholder="Descrição" min="20" maxlength="255"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="editProjectStartDate">Data de Início</label>
                        <input type="date" class="form-control" id="editProjectStartDate">
                    </div>
                    <div class="form-group">
                        <label for="editProjectEndDate">Data de Término</label>
                        <input type="date" class="form-control" id="editProjectEndDate">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn hoverView" style="background-color: #1f2029; color: white; " data-dismiss="modal">Fechar</button>
                <button class="btn hoverView" style="background-color: #1f2029; color: white; " id="saveProjectUpdates">Guardar Alterações</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal de Edição de Tarefa -->
<div class="modal fade" id="editTaskModal" tabindex="-1" role="dialog" aria-labelledby="editTaskModalLabel" aria-hidden="true" style="background-color: #1f2029;">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content" style="background-color: #1f2029; color:white;">
            <div class="modal-header">
                <h5 class="modal-title" id="editTaskModalLabel">Editar Tarefa</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" style="color:white">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="editTaskName">Nome da Tarefa</label>
                        <input type="text" class="form-control" id="editTaskName" placeholder="Nome da Tarefa" min="10" maxlength="50">
                    </div>
                    <div class="form-group">
                        <label for="editTaskDescription">Detalhes</label>
                        <textarea class="form-control" id="editTaskDescription" rows="3" placeholder="Detalhes da Tarefa" min="10" maxlength="144"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="editTaskDeadline">Data de Término</label>
                        <input type="date" class="form-control" id="editTaskDeadline">
                    </div>
                    <div class="form-group">
                        <label for="editTaskStatus">Estado</label>
                        <select class="form-control" id="editTaskStatus">
                            <option value="1">Ativo</option>
                            <option value="0">Inativo</option>
                        </select>
                    </div>

                </form>
            </div>
            <div class="modal-footer">
                <button class="btn hoverView" style="background-color: #1f2029; color: white; " data-dismiss="modal">Fechar</button>
                <button class="btn hoverView" style="background-color: #1f2029; color: white; " id="editTaskSuccess">Guardar Alterações</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal de Confirmação de Exclusão -->
<div class="modal fade" id="confirmDeletingProject" tabindex="-1" role="dialog" aria-labelledby="confirmDeletingProjectLabel" aria-hidden="true" style="background-color: #1f2029;">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content" style="background-color: #1f2029; color:white;">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeletingProjectLabel">Confirmar Exclusão</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" style="color:white">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Deseja realmente excluir este projeto?</p>
            </div>
            <div class="modal-footer">
                <button class="btn hoverView" style="background-color: #1f2029; color: white; " data-dismiss="modal">Fechar</button>
                <button class="btn hoverView" style="background-color: #1f2029; color: white; " id="confirmDeleteButton">Apagar</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal de Confirmação de Exclusão de Tarefa -->
<div class="modal fade" id="confirmDeleteTaskModal" tabindex="-1" role="dialog" aria-labelledby="confirmDeleteTaskModalLabel" aria-hidden="true" style="background-color: #1f2029;">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content" style="background-color: #1f2029; color:white;">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteTaskModalLabel">Confirmar Exclusão de Tarefa</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" style="color:white">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Deseja realmente excluir esta tarefa?</p>
            </div>
            <div class="modal-footer">
                <button class="btn hoverView" style="background-color: #1f2029; color: white; " data-dismiss="modal">Fechar</button>
                <button class="btn hoverView" style="background-color: #1f2029; color: white; " id="deleteTasktModal">Apagar</button>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


@section scripts {
    <script>
        function editProject(button) {
            var projectId = $(button).data('project-id');

            $('#saveProjectUpdates').click(function () {
                var name = $('#editProjectName').val();
                var description = $('#editProjectDescription').val();
                var startDate = $('#editProjectStartDate').val();
                var endDate = $('#editProjectEndDate').val();

                if (!name || !description || !startDate || !endDate) {
                    Swal.fire({
                        title: 'Erro!',
                        text: 'Todos os campos devem ser preenchidos.',
                        customClass: 'custom-swal',
                        icon: 'error'
                    });
                    return;
                }
                if (!validateDates(startDate, endDate)) {
                    Swal.fire({
                        title: 'Erro!',
                        text: 'As datas informadas não são válidas.',
                        icon: 'error',
                        customClass: 'custom-swal',
                        confirmButtonText: 'OK'
                    });
                    return;
                }
                $.ajax({
                    url: '/AdminPanel/UpdateProject/',
                    type: 'POST',
                    data: {
                        projectId: projectId,
                        name: name,
                        description: description,
                        startDate: startDate,
                        endDate: endDate
                    },
                    success: function (response) {
                        Swal.fire({
                            title: 'Sucesso!',
                            text: 'Projeto atualizado com sucesso!',
                            customClass: 'custom-swal',
                            icon: 'success'
                        }).then(function () {
                            location.reload();
                        });
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            title: 'Erro!',
                            text: 'Erro ao atualizar o projeto.',
                            customClass: 'custom-swal',
                            icon: 'error'
                        });
                    }
                });
            });
            $.ajax({
                url: '/AdminPanel/GetProject',
                type: 'POST',
                dataType: 'json',
                data: { projectId: projectId },
                success: function (response) {
                    const startDate = new Date(parseInt(response.startDate.replace("/Date(", "").replace(")/", "")));
                    const endDate = new Date(parseInt(response.endDate.replace("/Date(", "").replace(")/", "")));

                    const formattedStartDate = formatDate(startDate);
                    const formattedEndDate = formatDate(endDate);

                    $('#editProjectName').val(response.name);
                    $('#editProjectDescription').val(response.description);
                    $('#editProjectStartDate').attr('value', formattedStartDate);
                    $('#editProjectEndDate').attr('value', formattedEndDate);
                },
                error: function (xhr, status, error) {
                    Swal.fire({
                        title: 'Erro!',
                        text: 'Erro ao carregar o projeto.',
                        customClass: 'custom-swal',
                        icon: 'error'
                    });
                }
            });
        }
        function editTask(button) {
            var taskId = $(button).data('task-id');

            $('#editTaskSuccess').click(function () {
                var url = '/AdminPanel/UpdateTask/';
                $.ajax({
                    url: url,
                    type: 'POST',
                    data: {
                        taskId: taskId,
                        name: $('#editTaskName').val(),
                        description: $('#editTaskDescription').val(),
                        deadline: $('#editTaskDeadline').val(),
                        status: $('#editTaskStatus').val()
                    },
                    success: function (response) {
                        Swal.fire({
                            title: 'Sucesso!',
                            text: 'Tarefa atualizada com sucesso!',
                            customClass: 'custom-swal',
                            icon: 'success'
                        }).then(function () {
                            location.reload();
                        });
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            title: 'Erro!',
                            text: 'Ocorreu um erro ao atualizar a tarefa.',
                            customClass: 'custom-swal',
                            icon: 'error'
                        });
                    }
                });
            });

            $.ajax({
                url: '/AdminPanel/GetTask',
                type: 'POST',
                dataType: 'json',
                data: { taskId: taskId },
                success: function (response) {
                    const deadline = new Date(parseInt(response.deadline.replace("/Date(", "").replace(")/", "")));
                    const formattedDeadline = formatDate(deadline);

                    $('#editTaskName').val(response.name);
                    $('#editTaskDescription').val(response.description);
                    $('#editTaskDeadline').attr('value', formattedDeadline);
                    let status = response.status == 1 ? "1" : "0";
                    $('#editTaskStatus').val(status);
                },
                error: function (xhr, status, error) {
                    Swal.fire({
                        title: 'Erro!',
                        text: 'Ocorreu um erro ao obter os detalhes da tarefa.',
                        customClass: 'custom-swal',
                        icon: 'error'
                    });
                }
            });
        }
        $(document).ready(function () {
            $('.btn-delete').click(function () {
                var projectId = $(this).data('project-id');
                $('#confirmDeletingProject').modal('show');
                $('#confirmDeleteButton').data('project-id', projectId);
            });

            $('#confirmDeleteButton').click(function () {
                var projectId = $(this).data('project-id');

                Swal.fire({
                    title: 'Tens a certeza?',
                    text: 'Esta ação não pode ser desfeita.',
                    icon: 'warning',
                    showCancelButton: true,
                    customClass: 'custom-swal',
                    confirmButtonText: 'Sim, remover!',
                    cancelButtonText: 'Cancelar'
                }).then(function (result) {
                    if (result.isConfirmed) {
                        deleteProject(projectId);
                    }
                });

                $('#confirmDeleteProject').modal('hide');
            });
        });
        function deleteProject(projectId) {
            $.post('/AdminPanel/DeleteProject', { projectId: projectId })
                .done(function (response) {
                    Swal.fire({
                        title: response.success ? 'Sucesso!' : 'Erro!',
                        text: response.success ? 'Projeto removido com sucesso!' : 'Erro ao remover o projeto.',
                        customClass: 'custom-swal',
                        icon: response.success ? 'success' : 'error'
                    }).then(function () {
                        location.reload();
                    });
                })
                .fail(function () {
                    Swal.fire({
                        title: 'Erro!',
                        text: 'Erro ao remover o projeto.',
                        customClass: 'custom-swal',
                        confirmButtonText: 'Sim, remover!',
                        icon: 'error'
                    });
                });
        }
        $(document).ready(function () {
            $('.btn-task-delete').click(function () {
                var taskId = $(this).data('task-id');
                $('#confirmDeleteTaskModal').modal('show');
                $('#deleteTasktModal').data('task-id', taskId);
            });

            $('#deleteTasktModal').click(function () {
                var taskId = $(this).data('task-id');

                Swal.fire({
                    title: 'Tens a certeza?',
                    text: 'Esta ação não pode ser desfeita.',
                    icon: 'warning',
                    showCancelButton: true,
                    customClass: 'custom-swal',
                    confirmButtonText: 'Sim, remover!',
                    cancelButtonText: 'Cancelar'
                }).then(function (result) {
                    if (result.isConfirmed) {
                        deleteTask(taskId);
                    }
                });
                $('#confirmDeleteTaskModal').modal('hide');
            });
        });
        function deleteTask(taskId) {
            $.post('/AdminPanel/DeleteTask', { taskId: taskId })
                .done(function (response) {
                    Swal.fire({
                        title: response.success ? 'Sucesso!' : 'Erro!',
                        text: response.success ? 'Tarefa removido com sucesso!' : 'Erro ao remover a tarefa.',
                        customClass: 'custom-swal',
                        icon: response.success ? 'success' : 'error'
                    }).then(function (result) {
                        location.reload()
                    });
                })
                .fail(function () {
                    Swal.fire({
                        title: 'Erro!',
                        text: 'Erro ao remover a tarefa.',
                        confirmButtonText: 'Ok',
                        customClass: 'custom-swal',
                        icon: 'error'
                    });
                });
        }
        function formatDate(date) {
            const year = date.getFullYear();
            const month = String(date.getMonth() + 1).padStart(2, '0');
            const day = String(date.getDate()).padStart(2, '0');

            return `${year}-${month}-${day}`;
        }
        function toggleAccordionIcon(button, projectId) {
            const icon = button.querySelector('ion-icon');
            const iconId = icon.getAttribute('id');

            if (iconId === `project-${projectId}-Icon`) {
                icon.setAttribute('name', 'chevron-up-outline');
                icon.setAttribute('id', `project-${projectId}-IconUp`);
            } else if (iconId === `project-${projectId}-IconUp`) {
                icon.setAttribute('name', 'chevron-down-outline');
                icon.setAttribute('id', `project-${projectId}-Icon`);
            }

            // Fechar as outras dropdowns
            const collapseElements = document.querySelectorAll('[id^="project-"][id$="-Tasks"]');
            collapseElements.forEach((element) => {
                const elementId = element.getAttribute('id');
                if (elementId !== `project-${projectId}-Tasks`) {
                    element.classList.remove('show');
                    const icon = document.querySelector(`[id="${elementId.replace('Tasks', 'IconUp')}"]`);
                    if (icon) {
                        icon.setAttribute('name', 'chevron-down-outline');
                        icon.setAttribute('id', elementId.replace('Tasks', 'Icon'));
                    }
                }
            });
        }
        function validateDates(startDate, endDate) {
            var start = new Date(startDate);
            var end = new Date(endDate);

            if (end < start || end.getTime() === start.getTime()) {
                return false;
            }

            return true;
        }
    </script>
}